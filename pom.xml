<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.maojianwei.pi</groupId>
    <artifactId>pi-service-discovery-client</artifactId>
    <version>1.0</version>

    <name>pi-service-discovery-client</name>
    <url>http://www.MaoJianwei.com</url>
    <description>Register Raspberry Pi nodes to Aliyun ACM service.</description>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Jianwei Mao</name>
            <email>maojianwei2012@126.com</email>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git@github.com:MaoJianwei/Chinese_Poetry.git</connection>
        <developerConnection>scm:git:https://github.com/MaoJianwei/MaoPi_Service_Discovery_Client</developerConnection>
        <url>https://github.com/MaoJianwei/MaoPi_Service_Discovery_Client.git</url>
    </scm>
    <distributionManagement>
        <snapshotRepository>
            <id>mavenCentral_ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>mavenCentral_ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.alibaba.edas.acm</groupId>
            <artifactId>acm-sdk</artifactId>
            <version>1.0.9</version>
        </dependency>

        <!-- Ban Aliyun ACM ConfigService output ___ Java Log slf4j API-->
        <!--<dependency>-->
            <!--<groupId>org.slf4j</groupId>-->
            <!--<artifactId>slf4j-api</artifactId>-->
            <!--<version>1.7.21</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.slf4j</groupId>-->
            <!--<artifactId>slf4j-log4j12</artifactId>-->
            <!--<version>1.7.21</version>-->
        <!--</dependency>-->
    </dependencies>

    <build>
        <plugins>
            <!-- generate Manifest -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <archive>
                        <manifest>

                            <mainClass>com.maojianwei.pi.MaoPiServiceDiscoveryClient</mainClass>

                            <!-- add dependency classpath: ./dependency-jars/ should be same to maven-dependency-plugin below-->
                            <!--<addClasspath>true</addClasspath>-->
                            <!--<classpathPrefix>dependency-jars/</classpathPrefix>-->

                            <!-- add detail info to manifest -->
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <!--<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>-->
                        </manifest>
                    </archive>
                </configuration>
            </plugin>


            <!-- maven-shade-plugin will unzip the dependency jar, copy the .class files to our app jar -->
            <!-- so all dependencies is OK -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <!--<configuration>-->
                        <!--<transformers>-->
                        <!--<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
                        <!--<mainClMaoChinesePoetryetry</mainClass>-->
                        <!--</transformer>-->
                        <!--</transformers>-->
                        <!--</configuration>-->
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
